.tests_armhf_template:
  tags:
    - $CHIP_NAME
    - jtag
  variables:
    PLATFORM_NAME: "linux-armhf-test"
  artifacts:
    paths:
      - $TEST_RUN_DIR/debug_backend_tests.log
      - $TEST_RUN_DIR/${CI_JOB_NAME}.info
    reports:
      junit:
        - $TEST_RUN_DIR/results/*
    when: always
    expire_in: 1 week
  before_script:
    - export GCOV_PREFIX=$PWD/$TEST_RUN_DIR
    - export GCOV_PREFIX_STRIP=2
  script:
    - !reference [.add_gitlab_key, script]
    - !reference [.submodules_mirror_update, script]
    - !reference [.export_toolchain, script]
    - !reference [.run_tests_linux, script]
  after_script:
    # Below lines gets esp related file paths from tools/format-esp.sh
    # and change file extension as .gcno and .gcda
    - >
      input="tools/format-esp.sh";
      file_full_path="";
      dir_path="";
      file_name="";
      command_arg="";
      splitter_line="# Stub flasher related files";
      while IFS= read -r line ; do
        if [[ ${line:0:2} == "./" ]] ; then
          file_full_path=${line##*.sh };
          file_name=${file_full_path##*/} ;
          dir_path=${file_full_path%$file_name} ;
          command_arg+="--include "${dir_path}"*"${file_name:0:-2}".gcno ";
          command_arg+="--include "${dir_path}"*"${file_name:0:-2}".gcda ";
        fi
        if [[ $line == ${splitter_line}* ]] ; then
          break;
        fi
      done < "$input"
    - mkdir ${TEST_RUN_DIR}/${DIST_INSTALLED_DIR}/esp_cov_files
    - rsync -a --prune-empty-dirs --include '*/' ${command_arg} --exclude '*' ${TEST_RUN_DIR}/${DIST_INSTALLED_DIR}/_build ${TEST_RUN_DIR}/${DIST_INSTALLED_DIR}/esp_cov_files
    - lcov --capture --directory ${TEST_RUN_DIR}/${DIST_INSTALLED_DIR}/esp_cov_files --output-file ${TEST_RUN_DIR}/${CI_JOB_NAME}.info

.tests_armhf_master_xtensa_template:
  extends: .tests_armhf_template
  stage: test_idf_master
  image: $CI_DOCKER_REGISTRY/rpi-openocd-env-master:1
  before_script:
    #TODO: after docker image is updated, we will not need to download latest toolchain manually.
    - pushd ${HOME}/.espressif/tools/
    - rm -r ${TOOLCHAIN_PREFIX}-elf
    - wget -q https://github.com/espressif/crosstool-NG/releases/download/${ESP_MASTER_TOOLCHAIN_VER}/xtensa-esp-elf-13.2.0_20230928-arm-linux-gnueabihf.tar.xz
    - tar xf xtensa-esp-elf-13.2.0_20230928-arm-linux-gnueabihf.tar.xz
    - export PATH=${PWD}/xtensa-esp-elf/bin/:${PATH}
    - popd
    - ${TOOLCHAIN_PREFIX}-elf-gcc --version
  variables:
    ESP_GDB_TOOLCHAIN: "${ESP_XTENSA_GDB_TOOLCHAIN}"

.tests_armhf_master_riscv_template:
  extends: .tests_armhf_template
  stage: test_idf_master
  image: $CI_DOCKER_REGISTRY/rpi-openocd-env-master:1
  before_script:
    #TODO: after docker image is updated, we will not need to download latest toolchain manually.
    - pushd ${HOME}/.espressif/tools/
    - rm -r ${TOOLCHAIN_PREFIX}-elf
    - wget -q https://github.com/espressif/crosstool-NG/releases/download/${ESP_MASTER_TOOLCHAIN_VER}/riscv32-esp-elf-13.2.0_20230928-arm-linux-gnueabihf.tar.xz
    - tar xf riscv32-esp-elf-13.2.0_20230928-arm-linux-gnueabihf.tar.xz
    - export PATH=${PWD}/riscv32-esp-elf/bin/:${PATH}
    - popd
    - ${TOOLCHAIN_PREFIX}-elf-gcc --version
  variables:
    TOOLCHAIN_PREFIX: "riscv32-esp"
    ESP_GDB_TOOLCHAIN: "${ESP_RISCV_GDB_TOOLCHAIN}"

.tests_armhf_v5.1.x_xtensa_template:
  extends: .tests_armhf_template
  stage: test_idf5.1.x
  image: $CI_DOCKER_REGISTRY/rpi-openocd-env-v5.1:1
  variables:
    ESP_TOOLCHAIN: "${ESP_V5_1_X_TOOLCHAIN_VER}"
    ESP_GDB_TOOLCHAIN: "${ESP_V5_1_X_XTENSA_GDB_TOOLCHAIN}"

.tests_armhf_v5.1.x_riscv_template:
  extends: .tests_armhf_template
  stage: test_idf5.1.x
  image: $CI_DOCKER_REGISTRY/rpi-openocd-env-v5.1:1
  variables:
    TOOLCHAIN_PREFIX: "riscv32-esp"
    ESP_TOOLCHAIN: "${ESP_V5_1_X_TOOLCHAIN_VER}"
    ESP_GDB_TOOLCHAIN: "${ESP_V5_1_X_RISCV_GDB_TOOLCHAIN}"

.tests_armhf_v5.0.x_xtensa_template:
  extends: .tests_armhf_template
  stage: test_idf5.0.x
  image: $CI_DOCKER_REGISTRY/rpi-openocd-env-v5.0:1
  variables:
    ESP_TOOLCHAIN: "${ESP_V5_0_X_TOOLCHAIN_VER}"
    ESP_GDB_TOOLCHAIN: "${ESP_V5_0_X_XTENSA_GDB_TOOLCHAIN}"

.tests_armhf_v5.0.x_riscv_template:
  extends: .tests_armhf_template
  stage: test_idf5.0.x
  image: $CI_DOCKER_REGISTRY/rpi-openocd-env-v5.0:1
  variables:
    TOOLCHAIN_PREFIX: "riscv32-esp"
    ESP_TOOLCHAIN: "${ESP_V5_0_X_TOOLCHAIN_VER}"
    ESP_GDB_TOOLCHAIN: "${ESP_V5_0_X_RISCV_GDB_TOOLCHAIN}"

.tests_armhf_v4x_template:
  extends: .tests_armhf_template
  stage: test_idf4.x
  image: $CI_DOCKER_REGISTRY/rpi-openocd-env-v4.4:1
  variables:
    ESP_TOOLCHAIN: "${ESP_V4x_TOOLCHAIN_VER}"
    ESP_GDB_TOOLCHAIN: "${ESP_V4x_XTENSA_GDB_TOOLCHAIN}"

##############
# IDF master #
##############

tests_armhf_esp32:
  extends: .tests_armhf_master_xtensa_template
  allow_failure: true
  needs:
    - job: build_test_app_esp32
    - job: build_linux_armhf_test
  variables:
    TEST_RUN_DIR: "build_test_app_esp32"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32-wrover-kit-3.3v -e *.*Encrypted"

tests_armhf_esp32_flash_encrypted:
  extends: .tests_armhf_master_xtensa_template
  tags:
    - test_jtag_arm_flash_encryption
  allow_failure: true
  needs:
    - job: build_test_app_esp32
    - job: build_linux_armhf_test
  variables:
    TEST_RUN_DIR: "build_test_app_esp32"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32-wrover-kit-3.3v -p test_*.*Encrypted"

tests_armhf_esp32s2:
  extends: .tests_armhf_master_xtensa_template
  allow_failure: true
  needs:
    - job: build_test_app_esp32s2
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32s2"
    TOOLCHAIN_PREFIX: "xtensa-esp32s2"
    TEST_RUN_DIR: "build_test_app_esp32s2"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32s2-devkitj -p test_*.*Single"

tests_armhf_esp32s2_flash_encrypted:
  extends: .tests_armhf_master_xtensa_template
  tags:
    - test_jtag_arm_flash_encryption_esp32s2
  allow_failure: true
  needs:
    - job: build_test_app_esp32s2
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32s2"
    TOOLCHAIN_PREFIX: "xtensa-esp32s2"
    TEST_RUN_DIR: "build_test_app_esp32s2"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32s2-devkitj -p test_*.*SingleEncrypted"

tests_armhf_esp32s3:
  extends: .tests_armhf_master_xtensa_template
  allow_failure: true
  needs:
    - job: build_test_app_esp32s3
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32s3"
    TOOLCHAIN_PREFIX: "xtensa-esp32s3"
    TEST_RUN_DIR: "build_test_app_esp32s3"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32s3-ftdi -p test_*.*Single test_*.*Dual"

tests_armhf_esp32c2:
  extends: .tests_armhf_master_riscv_template
  allow_failure: true
  needs:
    - job: build_test_app_esp32c2
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32c2"
    TEST_RUN_DIR: "build_test_app_esp32c2"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32c2-ftdi -p test_*.*Single"

tests_armhf_esp32c3:
  extends: .tests_armhf_master_riscv_template
  allow_failure: true
  needs:
    - job: build_test_app_esp32c3
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32c3"
    TEST_RUN_DIR: "build_test_app_esp32c3"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32c3-ftdi -p test_*.*Single"

tests_armhf_esp32c3_builtin_usb_jtag:
  extends: .tests_armhf_master_riscv_template
  tags:
    - arm
    - test_jtag_arm_esp32c3_builtin
  allow_failure: true
  needs:
    - job: build_test_app_esp32c3
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32c3"
    TEST_RUN_DIR: "build_test_app_esp32c3"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32c3-builtin -p test_*.*Single"

tests_armhf_esp32c3_flash_encrypted:
  extends: .tests_armhf_master_riscv_template
  tags:
    - test_jtag_arm_flash_encryption_esp32c3
  allow_failure: true
  needs:
    - job: build_test_app_esp32c3
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32c3"
    TEST_RUN_DIR: "build_test_app_esp32c3"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32c3-ftdi -p test_*.*SingleEncrypted"

tests_armhf_esp32c6_builtin_usb_jtag:
  extends: .tests_armhf_master_riscv_template
  tags:
    - esp32c6
    - usb_serial_jtag
  allow_failure: true
  needs:
    - job: build_test_app_esp32c6
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32c6"
    TEST_RUN_DIR: "build_test_app_esp32c6"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32c6-builtin -p test_*.*Single -u /dev/ttyACM0"

tests_armhf_esp32h2_builtin_usb_jtag:
  extends: .tests_armhf_master_riscv_template
  tags:
    - esp32h2
    - usb_serial_jtag
  allow_failure: true
  needs:
    - job: build_test_app_esp32h2
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32h2"
    TEST_RUN_DIR: "build_test_app_esp32h2"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32h2-builtin -p test_*.*Single -u /dev/ttyACM0"

#############
# IDF 5.1.X #
#############

tests_armhf_esp32_idf5.1.x:
  extends: .tests_armhf_v5.1.x_xtensa_template
  needs:
    - job: build_test_app_esp32_idf5.1.x
    - job: build_linux_armhf_test
  variables:
    TEST_RUN_DIR: "build_test_app_esp32_idf5.1.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_1_X_RELEASE_TAG -b esp32-wrover-kit-3.3v -e *.*Encrypted"

tests_armhf_esp32_idf5.1.x_flash_encrypted:
  extends: .tests_armhf_v5.1.x_xtensa_template
  tags:
    - test_jtag_arm_flash_encryption
  needs:
    - job: build_test_app_esp32_idf5.1.x
    - job: build_linux_armhf_test
  variables:
    TEST_RUN_DIR: "build_test_app_esp32_idf5.1.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_1_X_RELEASE_TAG -b esp32-wrover-kit-3.3v -p test_*.*Encrypted"

tests_armhf_esp32s2_idf5.1.x:
  extends: .tests_armhf_v5.1.x_xtensa_template
  needs:
    - job: build_test_app_esp32s2_idf5.1.x
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32s2"
    TOOLCHAIN_PREFIX: "xtensa-esp32s2"
    TEST_RUN_DIR: "build_test_app_esp32s2_idf5.1.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_1_X_RELEASE_TAG -b esp32s2-devkitj -p test_*.*Single"

tests_armhf_esp32s2_idf5.1.x_flash_encrypted:
  extends: .tests_armhf_v5.1.x_xtensa_template
  tags:
    - test_jtag_arm_flash_encryption_esp32s2
  needs:
    - job: build_test_app_esp32s2_idf5.1.x
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32s2"
    TOOLCHAIN_PREFIX: "xtensa-esp32s2"
    TEST_RUN_DIR: "build_test_app_esp32s2_idf5.1.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_1_X_RELEASE_TAG -b esp32s2-devkitj -p test_*.*SingleEncrypted"

tests_armhf_esp32s3_idf5.1.x:
  extends: .tests_armhf_v5.1.x_xtensa_template
  needs:
    - job: build_test_app_esp32s3_idf5.1.x
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32s3"
    TOOLCHAIN_PREFIX: "xtensa-esp32s3"
    TEST_RUN_DIR: "build_test_app_esp32s3_idf5.1.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_1_X_RELEASE_TAG -b esp32s3-ftdi -p test_*.*Single test_*.*Dual"

tests_armhf_esp32c2_idf5.1.x:
  extends: .tests_armhf_v5.1.x_riscv_template
  needs:
    - job: build_test_app_esp32c2_idf5.1.x
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32c2"
    TEST_RUN_DIR: "build_test_app_esp32c2_idf5.1.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_1_X_RELEASE_TAG -b esp32c2-ftdi -p test_*.*Single"

tests_armhf_esp32c3_idf5.1.x:
  extends: .tests_armhf_v5.1.x_riscv_template
  needs:
    - job: build_test_app_esp32c3_idf5.1.x
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32c3"
    TEST_RUN_DIR: "build_test_app_esp32c3_idf5.1.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_1_X_RELEASE_TAG -b esp32c3-ftdi -p test_*.*Single"

tests_armhf_esp32c3_idf5.1.x_builtin_usb_jtag:
  extends: .tests_armhf_v5.1.x_riscv_template
  tags:
    - arm
    - test_jtag_arm_esp32c3_builtin
  needs:
    - job: build_test_app_esp32c3_idf5.1.x
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32c3"
    TEST_RUN_DIR: "build_test_app_esp32c3_idf5.1.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_1_X_RELEASE_TAG -b esp32c3-builtin -p test_*.*Single"

tests_armhf_esp32c3_idf5.1.x_flash_encrypted:
  extends: .tests_armhf_v5.1.x_riscv_template
  tags:
    - test_jtag_arm_flash_encryption_esp32c3
  needs:
    - job: build_test_app_esp32c3_idf5.1.x
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32c3"
    TEST_RUN_DIR: "build_test_app_esp32c3_idf5.1.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_1_X_RELEASE_TAG -b esp32c3-ftdi -p test_*.*SingleEncrypted"

tests_armhf_esp32c6_idf5.1.x_builtin_usb_jtag:
  extends: .tests_armhf_v5.1.x_riscv_template
  tags:
    - esp32c6
    - usb_serial_jtag
  needs:
    - job: build_test_app_esp32c6_idf5.1.x
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32c6"
    TEST_RUN_DIR: "build_test_app_esp32c6_idf5.1.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_1_X_RELEASE_TAG -b esp32c6-builtin -p test_*.*Single -u /dev/ttyACM0"

tests_armhf_esp32h2_idf5.1.x_builtin_usb_jtag:
  extends: .tests_armhf_v5.1.x_riscv_template
  tags:
    - esp32h2
    - usb_serial_jtag
  needs:
    - job: build_test_app_esp32h2_idf5.1.x
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32h2"
    TEST_RUN_DIR: "build_test_app_esp32h2_idf5.1.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_1_X_RELEASE_TAG -b esp32h2-builtin -p test_*.*Single -u /dev/ttyACM0"

#############
# IDF 5.0.X #
#############

tests_armhf_esp32_idf5.0.x:
  extends: .tests_armhf_v5.0.x_xtensa_template
  needs:
    - job: build_test_app_esp32_idf5.0.x
    - job: build_linux_armhf_test
  variables:
    TEST_RUN_DIR: "build_test_app_esp32_idf5.0.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_0_X_RELEASE_TAG -b esp32-wrover-kit-3.3v -e *.*Encrypted"

tests_armhf_esp32_idf5.0.x_flash_encrypted:
  extends: .tests_armhf_v5.0.x_xtensa_template
  tags:
    - test_jtag_arm_flash_encryption
  needs:
    - job: build_test_app_esp32_idf5.0.x
    - job: build_linux_armhf_test
  variables:
    TEST_RUN_DIR: "build_test_app_esp32_idf5.0.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_0_X_RELEASE_TAG -b esp32-wrover-kit-3.3v -p test_*.*Encrypted"

tests_armhf_esp32s2_idf5.0.x:
  extends: .tests_armhf_v5.0.x_xtensa_template
  needs:
    - job: build_test_app_esp32s2_idf5.0.x
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32s2"
    TOOLCHAIN_PREFIX: "xtensa-esp32s2"
    TEST_RUN_DIR: "build_test_app_esp32s2_idf5.0.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_0_X_RELEASE_TAG -b esp32s2-devkitj -p test_*.*Single"

tests_armhf_esp32s2_idf5.0.x_flash_encrypted:
  extends: .tests_armhf_v5.0.x_xtensa_template
  tags:
    - test_jtag_arm_flash_encryption_esp32s2
  needs:
    - job: build_test_app_esp32s2_idf5.0.x
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32s2"
    TOOLCHAIN_PREFIX: "xtensa-esp32s2"
    TEST_RUN_DIR: "build_test_app_esp32s2_idf5.0.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_0_X_RELEASE_TAG -b esp32s2-devkitj -p test_*.*SingleEncrypted"

tests_armhf_esp32s3_idf5.0.x:
  extends: .tests_armhf_v5.0.x_xtensa_template
  needs:
    - job: build_test_app_esp32s3_idf5.0.x
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32s3"
    TOOLCHAIN_PREFIX: "xtensa-esp32s3"
    TEST_RUN_DIR: "build_test_app_esp32s3_idf5.0.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_0_X_RELEASE_TAG -b esp32s3-ftdi -p test_*.*Single test_*.*Dual"

tests_armhf_esp32c2_idf5.0.x:
  extends: .tests_armhf_v5.0.x_riscv_template
  needs:
    - job: build_test_app_esp32c2_idf5.0.x
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32c2"
    TEST_RUN_DIR: "build_test_app_esp32c2_idf5.0.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_0_X_RELEASE_TAG -b esp32c2-ftdi -p test_*.*Single"

tests_armhf_esp32c3_idf5.0.x:
  extends: .tests_armhf_v5.0.x_riscv_template
  needs:
    - job: build_test_app_esp32c3_idf5.0.x
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32c3"
    TEST_RUN_DIR: "build_test_app_esp32c3_idf5.0.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_0_X_RELEASE_TAG -b esp32c3-ftdi -p test_*.*Single"

tests_armhf_esp32c3_idf5.0.x_builtin_usb_jtag:
  extends: .tests_armhf_v5.0.x_riscv_template
  tags:
    - arm
    - test_jtag_arm_esp32c3_builtin
  needs:
    - job: build_test_app_esp32c3_idf5.0.x
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32c3"
    TEST_RUN_DIR: "build_test_app_esp32c3_idf5.0.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_0_X_RELEASE_TAG -b esp32c3-builtin -p test_*.*Single"

tests_armhf_esp32c3_idf5.0.x_flash_encrypted:
  extends: .tests_armhf_v5.0.x_riscv_template
  tags:
    - test_jtag_arm_flash_encryption_esp32c3
  needs:
    - job: build_test_app_esp32c3_idf5.0.x
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32c3"
    TEST_RUN_DIR: "build_test_app_esp32c3_idf5.0.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_0_X_RELEASE_TAG -b esp32c3-ftdi -p test_*.*SingleEncrypted"

###########
# IDF 4.X #
###########

tests_armhf_esp32_idf4.x:
  extends: .tests_armhf_v4x_template
  needs:
    - job: build_test_app_esp32_idf4.x
    - job: build_linux_armhf_test
  variables:
    TEST_RUN_DIR: "build_test_app_esp32_idf4.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF4_X_RELEASE_TAG -b esp32-wrover-kit-3.3v -e *.*Encrypted"

tests_armhf_esp32_idf4.x_flash_encrypted:
  extends: .tests_armhf_v4x_template
  tags:
    - test_jtag_arm_flash_encryption
  needs:
    - job: build_test_app_esp32_idf4.x
    - job: build_linux_armhf_test
  variables:
    TEST_RUN_DIR: "build_test_app_esp32_idf4.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF4_X_RELEASE_TAG -b esp32-wrover-kit-3.3v -p test_*.*Encrypted"

tests_armhf_esp32s2_idf4.x:
  extends: .tests_armhf_v4x_template
  needs:
    - job: build_test_app_esp32s2_idf4.x
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32s2"
    TOOLCHAIN_PREFIX: "xtensa-esp32s2"
    TEST_RUN_DIR: "build_test_app_esp32s2_idf4.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF4_X_RELEASE_TAG -b esp32s2-devkitj -p test_*.*Single"

tests_armhf_esp32s2_idf4.x_flash_encrypted:
  extends: .tests_armhf_v4x_template
  tags:
    - test_jtag_arm_flash_encryption_esp32s2
  needs:
    - job: build_test_app_esp32s2_idf4.x
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32s2"
    TOOLCHAIN_PREFIX: "xtensa-esp32s2"
    TEST_RUN_DIR: "build_test_app_esp32s2_idf4.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF4_X_RELEASE_TAG -b esp32s2-devkitj -p test_*.*SingleEncrypted"

tests_armhf_esp32s3_idf4.x:
  extends: .tests_armhf_v4x_template
  needs:
    - job: build_test_app_esp32s3_idf4.x
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32s3"
    TOOLCHAIN_PREFIX: "xtensa-esp32s3"
    TEST_RUN_DIR: "build_test_app_esp32s3_idf4.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF4_X_RELEASE_TAG -b esp32s3-ftdi -p test_*.*Single test_*.*Dual"

tests_armhf_esp32c3_idf4.x:
  extends: .tests_armhf_v4x_template
  needs:
    - job: build_test_app_esp32c3_idf4.x
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32c3"
    TOOLCHAIN_PREFIX: "riscv32-esp"
    ESP_GDB_TOOLCHAIN: "${ESP_V4x_RISCV_GDB_TOOLCHAIN}"
    TEST_RUN_DIR: "build_test_app_esp32c3_idf4.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF4_X_RELEASE_TAG -b esp32c3-ftdi -p test_*.*Single"

tests_armhf_esp32c3_idf4.x_flash_encrypted:
  extends: .tests_armhf_v4x_template
  tags:
    - test_jtag_arm_flash_encryption_esp32c3
  needs:
    - job: build_test_app_esp32c3_idf4.x
    - job: build_linux_armhf_test
  variables:
    CHIP_NAME: "esp32c3"
    TOOLCHAIN_PREFIX: "riscv32-esp"
    ESP_GDB_TOOLCHAIN: "${ESP_V4x_RISCV_GDB_TOOLCHAIN}"
    TEST_RUN_DIR: "build_test_app_esp32c3_idf4.x"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF4_X_RELEASE_TAG -b esp32c3-ftdi -p test_*.*SingleEncrypted"

#############
# HOST TEST #
#############

tests_win_simple_esp32:
  stage: test_host
  tags:
    - test_jtag_win
  needs:
    - job: build_windows
  variables:
    # actually we don't need the project sources, but we need the `git clean` gitlab-runner's stage.
    # It's possible only for `fetch` or `clone`.
    GIT_STRATEGY: fetch
    PLATFORM_NAME: "win32"
  before_script: []
  script:
    - $ARCHIVE_NAME=$(cat "$DIST_ART_DIR/dist_name_$PLATFORM_NAME")
    - Expand-Archive -DestinationPath . "$DIST_ART_DIR/$ARCHIVE_NAME"
    - $OPENOCD_SCRIPTS="$PWD\openocd-esp32\share\openocd\scripts"
    - .\openocd-esp32\bin\openocd --version
    - echo $OPENOCD_SCRIPTS
    - .\openocd-esp32\bin\openocd.exe -f board\esp32-ethernet-kit-3.3v.cfg -c "init; reset halt; sleep 5; exit"

tests_macos_simple_esp32:
  stage: test_host
  tags:
    - macos_shell
  needs:
    - job: build_macos
  variables:
    # actually we don't need the project sources, but we need the `git clean` gitlab-runner's stage.
    # It's possible only for `fetch` or `clone`.
    GIT_STRATEGY: fetch
    PLATFORM_NAME: "macos"
  before_script: []
  script:
    - ARCHIVE_NAME=$(cat "$DIST_ART_DIR/dist_name_$PLATFORM_NAME")
    - echo $ARCHIVE_NAME
    - tar xzf $DIST_ART_DIR/$ARCHIVE_NAME openocd-esp32
    - ./openocd-esp32/bin/openocd --version

tests_linux_simple_esp32:
  stage: test_host
  image: $CI_DOCKER_REGISTRY/esp-env-v5.1:1
  tags:
    - build
  needs:
    - job: build_linux
  variables:
    # actually we don't need the project sources, but we need the `git clean` gitlab-runner's stage.
    # It's possible only for `fetch` or `clone`.
    GIT_STRATEGY: fetch
    PLATFORM_NAME: "linux-amd64"
  before_script: []
  script:
    - ARCHIVE_NAME=$(cat "$DIST_ART_DIR/dist_name_$PLATFORM_NAME")
    - echo $ARCHIVE_NAME
    - tar xzf $DIST_ART_DIR/$ARCHIVE_NAME openocd-esp32
    - ./openocd-esp32/bin/openocd --version

###########
#  NUTTX  #
###########

.test_nuttx_template:
  image: $CI_DOCKER_REGISTRY/rpi-openocd-env-master:1
  stage: test_nuttx
  tags:
    - $CHIP
    - jtag
  allow_failure: true
  artifacts:
    paths:
      - $TEST_RUN_DIR/debug_backend_tests.log
    reports:
      junit:
        - $TEST_RUN_DIR/results/*
    when: always
    expire_in: 1 week
  variables:
    PLATFORM_NAME: "linux-armhf-test"
    ESP_TOOLCHAIN: "${ESP_MASTER_TOOLCHAIN_VER}"
    ESP_GDB_TOOLCHAIN: "${ESP_XTENSA_GDB_TOOLCHAIN}"
    TEST_RUN_DIR: "nuttx_test"
    NUTTX_APP_NAME: "nuttx_openocd"
    OOCD_CMDS: "set ESP_RTOS nuttx,set ESP32_ONLYCPU 1"
    TEST_RUN_EXTRA_OPTS: "-i other -b ${TEST_BOARD} -p test_nuttx -e *.*Encrypted"
  needs:
    - job: build_linux_armhf_test
    - job: build_nuttx_app
      artifacts: false
    - project: idf/apache/esp-nuttx-apps
      job: build_openocd_${CHIP}
      ref: master
  script:
    - !reference [.export_toolchain, script]
    - mkdir -p $TEST_RUN_DIR/$NUTTX_APP_NAME
    - !reference [.copy_nuttx_files, script]
    - !reference [.run_tests_nuttx, script]

test_nuttx_esp32:
  extends:
    - .test_nuttx_template
  variables:
    CHIP: esp32
    TEST_BOARD: "esp32-wrover-kit-3.3v"
    TOOLCHAIN_PREFIX: "xtensa-esp32"

test_nuttx_esp32s2:
  extends:
    - .test_nuttx_template
  variables:
    CHIP: esp32s2
    TEST_BOARD: "esp32s2-devkitj"
    TOOLCHAIN_PREFIX: "xtensa-esp32s2"

test_nuttx_esp32s3:
  extends:
    - .test_nuttx_template
  variables:
    CHIP: esp32s3
    TEST_BOARD: "esp32s3-ftdi"
    TOOLCHAIN_PREFIX: "xtensa-esp32s3"

test_nuttx_esp32c3:
  extends:
    - .test_nuttx_template
  variables:
    CHIP: esp32c3
    TEST_BOARD: "esp32c3-ftdi"
    TOOLCHAIN_PREFIX: "riscv32-esp"
    ESP_GDB_TOOLCHAIN: "${ESP_RISCV_GDB_TOOLCHAIN}"
